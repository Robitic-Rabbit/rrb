name: Deploy Backend to Hostinger VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check AWS CLI version
        run: aws --version

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Docker image tag
        id: docker_tag
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "tag=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" == "push" ] && [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            tag_version=$(echo "${{ github.ref }}" | sed -e 's/refs\/tags\/v//')
            echo "tag=v$tag_version" >> $GITHUB_OUTPUT
          else
            echo "tag=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker image
        run: |
          docker build --no-cache -t ${{ secrets.DOCKER_HUB_USERNAME }}/rrs-be:${{ steps.docker_tag.outputs.tag }} -f Dockerfile .

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_HUB_PAT }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/rrs-be:${{ steps.docker_tag.outputs.tag }}

      - name: Deploy to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key

          ssh -i private_key -o StrictHostKeyChecking=no ubuntu@44.246.133.131 << 'EOF'
            echo "🧹 Cleaning up old application resources..."

            # Stop and remove old containers
            docker stop rrs-be log-viewer loki || true
            docker rm rrs-be log-viewer loki || true

            # Remove outdated data/scripts (safe to delete)
            rm -rf ~/data
            rm -f ~/docker.sh

            # Remove unused images
            docker image prune -a -f

            echo "⬇️ Pulling new image..."
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/rrs-be:${{ steps.docker_tag.outputs.tag }}

            echo "🚀 Starting backend container..."
            docker network create RRS || true
            docker run -d --name rrs-be \
              -p 5000:5000 \
              -p 3001:3001 \
              --network RRS \
              --log-driver json-file \
              --log-opt max-size=100m \
              --log-opt max-file=5 \
              -e NODE_ENV=production \
              -e LOG_LEVEL=debug \
              -e VAULT_ADDR=https://vault.roboticrabbitsyndicate.io \
              -e VAULT_TOKEN="${VAULT_TOKEN}" \
              ${{ secrets.DOCKER_HUB_USERNAME }}/rrs-be:${{ steps.docker_tag.outputs.tag }}

            echo "📈 Starting log viewer (Dozzle)..."
            docker run -d \
              --name log-viewer \
              --network RRS \
              -p 8080:8080 \
              -v /var/run/docker.sock:/var/run/docker.sock \
              -e DOZZLE_AUTH=admin:${{ secrets.DOZZLE_PASSWORD || 'changepassword' }} \
              -e DOZZLE_BASE=/logs \
              --restart unless-stopped \
              amir20/dozzle:latest

            echo "📊 Starting Loki (optional)..."
            docker run -d \
              --name loki \
              --network RRS \
              -p 3100:3100 \
              --restart unless-stopped \
              grafana/loki:latest

            echo "📦 Deployment complete. Active containers:"
            docker ps
          EOF

      - name: Clean up private key
        run: rm -f private_key
